{"version":3,"file":"static/js/252.a15a237e.chunk.js","mappings":"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","sources":["components/HostOnboardingForm/index.jsx","pages/HostOnboardingPage/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst propertyTypes = [\n    { id: 'apartment', label: 'Appartement' },\n    { id: 'house', label: 'Maison' },\n    { id: 'guest-house', label: 'Maison d\\'hôtes' },\n    { id: 'hotel', label: 'Hôtel' },\n];\n\nconst Step1 = ({ onNext, formData }) => {\n    const [selectedType, setSelectedType] = useState(formData.propertyType || null);\n\n    return (\n        <div className=\"onboarding-step\">\n            <h2>Quel type de logement proposez-vous ?</h2>\n            <div className=\"property-types\">\n                {propertyTypes.map((type) => (\n                    <button \n                        key={type.id} \n                        className={`type-button ${selectedType === type.id ? 'selected' : ''}`}\n                        onClick={() => setSelectedType(type.id)}\n                    >\n                        {type.label}\n                    </button>\n                ))}\n            </div>\n            <div className=\"navigation-buttons\">\n                <button onClick={() => onNext({ propertyType: selectedType })} disabled={!selectedType}>Suivant</button>\n            </div>\n        </div>\n    );\n};\n\nconst Step2 = ({ onNext, onBack, formData }) => {\n    const [address, setAddress] = useState(formData.address || '');\n    const [city, setCity] = useState(formData.city || '');\n    const [postalCode, setPostalCode] = useState(formData.postalCode || '');\n    const [country, setCountry] = useState(formData.country || '');\n\n    const isFormValid = address && city && postalCode && country;\n\n    return (\n        <div className=\"onboarding-step\">\n            <h2>Où se situe votre logement ?</h2>\n            <div className=\"address-form\">\n                <input type=\"text\" placeholder=\"Adresse\" value={address} onChange={(e) => setAddress(e.target.value)} />\n                <input type=\"text\" placeholder=\"Ville\" value={city} onChange={(e) => setCity(e.target.value)} />\n                <input type=\"text\" placeholder=\"Code Postal\" value={postalCode} onChange={(e) => setPostalCode(e.target.value)} />\n                <input type=\"text\" placeholder=\"Pays\" value={country} onChange={(e) => setCountry(e.target.value)} />\n            </div>\n            <div className=\"navigation-buttons\">\n                <button onClick={onBack} className=\"back-button\">Précédent</button>\n                <button onClick={() => onNext({ address, city, postalCode, country })} disabled={!isFormValid}>Suivant</button>\n            </div>\n        </div>\n    );\n};\n\nconst Counter = ({ label, value, onIncrement, onDecrement }) => (\n    <div className=\"counter\">\n        <span className=\"counter-label\">{label}</span>\n        <div className=\"counter-controls\">\n            <button onClick={onDecrement} disabled={value <= 0}>-</button>\n            <span className=\"counter-value\">{value}</span>\n            <button onClick={onIncrement}>+</button>\n        </div>\n    </div>\n);\n\nconst Step3 = ({ onNext, onBack, formData }) => {\n    const [guests, setGuests] = useState(formData.guests || 1);\n    const [bedrooms, setBedrooms] = useState(formData.bedrooms || 1);\n    const [bathrooms, setBathrooms] = useState(formData.bathrooms || 1);\n\n    return (\n        <div className=\"onboarding-step\">\n            <h2>Informations de base sur le logement</h2>\n            <div className=\"basics-form\">\n                <Counter \n                    label=\"Voyageurs\"\n                    value={guests}\n                    onIncrement={() => setGuests(guests + 1)}\n                    onDecrement={() => setGuests(guests - 1)}\n                />\n                <Counter \n                    label=\"Chambres\"\n                    value={bedrooms}\n                    onIncrement={() => setBedrooms(bedrooms + 1)}\n                    onDecrement={() => setBedrooms(bedrooms - 1)}\n                />\n                <Counter \n                    label=\"Salles de bain\"\n                    value={bathrooms}\n                    onIncrement={() => setBathrooms(bathrooms + 1)}\n                    onDecrement={() => setBathrooms(bathrooms - 1)}\n                />\n            </div>\n            <div className=\"navigation-buttons\">\n                <button onClick={onBack} className=\"back-button\">Précédent</button>\n                <button onClick={() => onNext({ guests, bedrooms, bathrooms })}>Suivant</button>\n            </div>\n        </div>\n    );\n};\n\nconst amenitiesList = [\n    { id: 'wifi', label: 'Wi-Fi' },\n    { id: 'kitchen', label: 'Cuisine' },\n    { id: 'tv', label: 'Télévision' },\n    { id: 'air-conditioning', label: 'Climatisation' },\n    { id: 'washing-machine', label: 'Lave-linge' },\n    { id: 'parking', label: 'Parking gratuit' },\n];\n\nconst Step4 = ({ onNext, onBack, formData }) => {\n    const [selectedAmenities, setSelectedAmenities] = useState(formData.amenities || []);\n\n    const toggleAmenity = (amenityId) => {\n        setSelectedAmenities((prev) => \n            prev.includes(amenityId) \n                ? prev.filter((id) => id !== amenityId) \n                : [...prev, amenityId]\n        );\n    };\n\n    return (\n        <div className=\"onboarding-step\">\n            <h2>Quels équipements proposez-vous ?</h2>\n            <div className=\"amenities-grid\">\n                {amenitiesList.map((amenity) => (\n                    <button \n                        key={amenity.id} \n                        className={`amenity-button ${selectedAmenities.includes(amenity.id) ? 'selected' : ''}`}\n                        onClick={() => toggleAmenity(amenity.id)}\n                    >\n                        {amenity.label}\n                    </button>\n                ))}\n            </div>\n            <div className=\"navigation-buttons\">\n                <button onClick={onBack} className=\"back-button\">Précédent</button>\n                <button onClick={() => onNext({ amenities: selectedAmenities })}>Suivant</button>\n            </div>\n        </div>\n    );\n};\n\nconst Step5 = ({ onNext, onBack, formData }) => {\n    const [photos, setPhotos] = useState(formData.photos || []);\n    const [photoPreviews, setPhotoPreviews] = useState(formData.photos ? formData.photos.map(p => URL.createObjectURL(p)) : []);\n\n    useEffect(() => {\n        // Cleanup object URLs to avoid memory leaks\n        return () => {\n            photoPreviews.forEach(url => URL.revokeObjectURL(url));\n        };\n    }, [photoPreviews]);\n\n    const handlePhotoUpload = (e) => {\n        const files = Array.from(e.target.files);\n        setPhotos(prev => [...prev, ...files]);\n        \n        const newPreviews = files.map(file => URL.createObjectURL(file));\n        setPhotoPreviews(prev => [...prev, ...newPreviews]);\n    };\n\n    return (\n        <div className=\"onboarding-step\">\n            <h2>Ajoutez des photos de votre logement</h2>\n            <div className=\"photo-uploader\">\n                <input \n                    type=\"file\" \n                    multiple \n                    accept=\"image/*\" \n                    onChange={handlePhotoUpload} \n                    id=\"photo-upload-input\"\n                    style={{ display: 'none' }}\n                />\n                <label htmlFor=\"photo-upload-input\" className=\"photo-upload-label\">\n                    Cliquez pour ajouter des photos\n                </label>\n                <div className=\"photo-preview-grid\">\n                    {photoPreviews.map((previewUrl, index) => (\n                        <img key={index} src={previewUrl} alt={`Aperçu ${index + 1}`} className=\"photo-preview\" />\n                    ))}\n                </div>\n            </div>\n            <div className=\"navigation-buttons\">\n                <button onClick={onBack} className=\"back-button\">Précédent</button>\n                <button onClick={() => onNext({ photos })} disabled={photos.length === 0}>Suivant</button>\n            </div>\n        </div>\n    );\n};\n\nconst Step6 = ({ onNext, onBack, formData }) => {\n    const [title, setTitle] = useState(formData.title || '');\n    const [description, setDescription] = useState(formData.description || '');\n\n    const isFormValid = title.length >= 5 && description.length >= 20;\n\n    return (\n        <div className=\"onboarding-step\">\n            <h2>Titre et description de l'annonce</h2>\n            <div className=\"text-inputs-form\">\n                <input \n                    type=\"text\" \n                    placeholder=\"Titre de l'annonce (ex: Appartement cosy au coeur de Paris)\" \n                    value={title} \n                    onChange={(e) => setTitle(e.target.value)} \n                />\n                <textarea \n                    placeholder=\"Décrivez votre logement en quelques mots...\" \n                    value={description} \n                    onChange={(e) => setDescription(e.target.value)} \n                    rows=\"6\"\n                />\n            </div>\n            <div className=\"navigation-buttons\">\n                <button onClick={onBack} className=\"back-button\">Précédent</button>\n                <button onClick={() => onNext({ title, description })} disabled={!isFormValid}>Suivant</button>\n            </div>\n        </div>\n    );\n};\n\nconst Step7 = ({ onNext, onBack, formData }) => {\n    const [price, setPrice] = useState(formData.price || '');\n\n    const isFormValid = price > 0;\n\n    return (\n        <div className=\"onboarding-step\">\n            <h2>Fixez votre prix par nuit</h2>\n            <div className=\"price-form\">\n                <input \n                    type=\"number\" \n                    placeholder=\"Prix en €\" \n                    value={price} \n                    onChange={(e) => setPrice(e.target.value)} \n                    className=\"price-input\"\n                />\n            </div>\n            <div className=\"navigation-buttons\">\n                <button onClick={onBack} className=\"back-button\">Précédent</button>\n                <button onClick={() => onNext({ price })} disabled={!isFormValid}>Suivant</button>\n            </div>\n        </div>\n    );\n};\n\nconst Step8 = ({ onBack, formData, navigate }) => {\n    const handleSubmit = async () => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            alert('Vous devez être connecté pour publier une annonce.');\n            return;\n        }\n\n        const data = new FormData();\n        data.append('title', formData.title);\n        data.append('description', formData.description);\n        data.append('price', formData.price);\n        data.append('location', formData.address); // Assuming the backend can parse this\n        data.append('propertyType', formData.propertyType);\n        if (formData.amenities) {\n            formData.amenities.forEach(amenity => data.append('equipments[]', amenity));\n        }\n        if (formData.photos) {\n            formData.photos.forEach(photo => {\n                data.append('pictures', photo); // 'pictures' must match the backend field for file uploads\n            });\n        }\n\n        try {\n                        const response = await fetch(`${process.env.REACT_APP_API_URL}/logements`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    // Do NOT set 'Content-Type'. The browser will set it automatically for FormData.\n                },\n                body: data,\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || 'La création de l\\'annonce a échoué.');\n            }\n\n            alert('Annonce créée avec succès ! Vous allez être redirigé.');\n            navigate('/');\n\n        } catch (error) {\n            console.error('Erreur lors de la soumission de l\\'annonce:', error);\n            alert(error.message);\n        }\n    };\n\n    return (\n        <div className=\"onboarding-step\">\n            <h2>Récapitulatif de l'annonce</h2>\n            <div className=\"summary-details\">\n                <h3>{formData.title}</h3>\n                <p>{formData.address}, {formData.city}, {formData.postalCode}, {formData.country}</p>\n                <div className=\"photo-preview-grid\">\n                    {formData.photos && formData.photos.map((photo, index) => (\n                        <img key={index} src={URL.createObjectURL(photo)} alt={`Aperçu ${index + 1}`} className=\"photo-preview\" />\n                    ))}\n                </div>\n                <p><strong>{formData.price}€</strong> par nuit</p>\n                <p>{formData.description}</p>\n            </div>\n            <div className=\"navigation-buttons\">\n                <button onClick={onBack} className=\"back-button\">Précédent</button>\n                <button onClick={handleSubmit} className=\"publish-button\">Publier l'annonce</button>\n            </div>\n        </div>\n    );\n};\n\nconst HostOnboardingForm = () => {\n    const navigate = useNavigate();\n    const [step, setStep] = useState(1);\n    const [formData, setFormData] = useState({});\n\n    const handleNext = (data) => {\n        setFormData({ ...formData, ...data });\n        setStep(step + 1);\n    };\n\n    const handleBack = () => {\n        setStep(step - 1);\n    };\n\n    return (\n        <div className=\"host-onboarding-form\">\n            {step === 1 && <Step1 onNext={handleNext} formData={formData} />}\n            {/* Les étapes suivantes viendront ici */}\n            {step === 2 && <Step2 onNext={handleNext} onBack={handleBack} formData={formData} />}\n            {step === 3 && <Step3 onNext={handleNext} onBack={handleBack} formData={formData} />}\n            {step === 4 && <Step4 onNext={handleNext} onBack={handleBack} formData={formData} />}\n            {step === 5 && <Step5 onNext={handleNext} onBack={handleBack} formData={formData} />}\n            {step === 6 && <Step6 onNext={handleNext} onBack={handleBack} formData={formData} />}\n            {step === 7 && <Step7 onNext={handleNext} onBack={handleBack} formData={formData} />}\n            {step === 8 && <Step8 onBack={handleBack} formData={formData} navigate={navigate} />}\n        </div>\n    );\n};\n\nexport default HostOnboardingForm;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport HostOnboardingForm from '../../components/HostOnboardingForm';\nimport '../../components/HostOnboardingForm/_host-onboarding-form.scss';\n\nconst HostOnboardingPage = () => {\n    return (\n        <main className=\"host-onboarding-page container\">\n            <Helmet>\n                <title>Créez votre annonce - Kasa</title>\n            </Helmet>\n            <HostOnboardingForm />\n        </main>\n    );\n};\n\nexport default HostOnboardingPage;\n"],"names":["propertyTypes","id","label","Step1","_ref","onNext","formData","selectedType","setSelectedType","useState","propertyType","_jsxs","className","children","_jsx","map","type","concat","onClick","disabled","Step2","_ref2","onBack","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","isFormValid","placeholder","value","onChange","e","target","Counter","_ref3","onIncrement","onDecrement","Step3","_ref4","guests","setGuests","bedrooms","setBedrooms","bathrooms","setBathrooms","amenitiesList","Step4","_ref5","selectedAmenities","setSelectedAmenities","amenities","amenity","includes","toggleAmenity","amenityId","prev","filter","Step5","_ref6","photos","setPhotos","photoPreviews","setPhotoPreviews","p","URL","createObjectURL","useEffect","forEach","url","revokeObjectURL","multiple","accept","files","Array","from","newPreviews","file","style","display","htmlFor","previewUrl","index","src","alt","length","Step6","_ref7","title","setTitle","description","setDescription","rows","Step7","_ref8","price","setPrice","Step8","_ref9","navigate","photo","async","token","localStorage","getItem","alert","data","FormData","append","response","fetch","process","method","headers","body","ok","errorData","json","Error","message","error","console","HostOnboardingForm","useNavigate","step","setStep","setFormData","handleNext","_objectSpread","handleBack","HostOnboardingPage","Helmet"],"sourceRoot":""}