{"version":3,"file":"static/js/490.4d6ea5c7.chunk.js","mappings":"2IAGA,MAcA,EAdaA,IAAiD,IAAhD,MAAEC,EAAK,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,GAAUJ,EACtD,OACEK,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAAAF,SAAA,EACLG,EAAAA,EAAAA,KAAA,SAAAH,SAAQH,EAAK,GAAAO,OAAMP,EAAK,WAAY,gDACpCM,EAAAA,EAAAA,KAAA,QACEE,KAAK,cACLC,QAASR,GAAe,yIAEzBC,IAAYI,EAAAA,EAAAA,KAAA,QAAME,KAAK,WAAWC,QAASP,IAC3CC,K,kICLP,MAmFA,EAnFkBO,KACd,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC7B,MAAEK,IAAUC,EAAAA,EAAAA,OACZ,gBAAEC,IAAoBC,EAAAA,EAAAA,KACtBC,GAAWC,EAAAA,EAAAA,MAmCjB,OACInB,EAAAA,EAAAA,MAAAoB,EAAAA,SAAA,CAAArB,SAAA,EACIG,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,CACDzB,MAAM,YACNC,YAAY,8GAEhBK,EAAAA,EAAAA,KAAA,QAAMoB,UAAU,uDAAsDvB,UAClEC,EAAAA,EAAAA,MAAA,OAAKsB,UAAU,iBAAgBvB,SAAA,EAC3BG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,eACJC,EAAAA,EAAAA,MAAA,QAAMuB,SA1CDC,UACjBC,EAAMC,iBACNb,EAAS,IAET,IACgB,MAAMc,QAAiBC,MAAM,GAADzB,OAAI0B,wCAA6B,UAAU,CAC/EC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAE3B,QAAOG,eAG5ByB,QAAaR,EAASS,OAE5B,IAAKT,EAASU,GACV,MAAM,IAAIC,MAAMH,EAAKI,SAAW,mBAIpC,MAAMC,EAAiC,SAAnBL,EAAKM,KAAKC,KACxB,CAAC,sBAAuB,kBAAmB,kBAC3C,CAAC,eAAgB,iBACjBC,GAAmBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQT,EAAKM,MAAI,IAAED,gBAE5C1B,EAAMqB,EAAKU,MAAOF,GAClB3B,EAAgB,cAADb,OAAewC,EAAoBvC,KAAI,MAAM,WAC5Dc,EAAS,IACb,CAAE,MAAO4B,GACLjC,EAASiC,EAAIP,QACjB,GAY0CjB,UAAU,YAAWvB,SAAA,EAC/CC,EAAAA,EAAAA,MAAA,OAAKsB,UAAU,aAAYvB,SAAA,EACvBG,EAAAA,EAAAA,KAAA,SAAO6C,QAAQ,QAAOhD,SAAC,oBACvBG,EAAAA,EAAAA,KAAA,SACI8C,KAAK,QACLC,GAAG,QACHC,MAAO3C,EACP4C,SAAWC,GAAM5C,EAAS4C,EAAEC,OAAOH,OACnCI,UAAQ,QAGhBtD,EAAAA,EAAAA,MAAA,OAAKsB,UAAU,aAAYvB,SAAA,EACvBG,EAAAA,EAAAA,KAAA,SAAO6C,QAAQ,WAAUhD,SAAC,kBAC1BG,EAAAA,EAAAA,KAAA,SACI8C,KAAK,WACLC,GAAG,WACHC,MAAOxC,EACPyC,SAAWC,GAAMzC,EAAYyC,EAAEC,OAAOH,OACtCI,UAAQ,OAGf1C,IAASV,EAAAA,EAAAA,KAAA,KAAGoB,UAAU,gBAAevB,SAAEa,KACxCV,EAAAA,EAAAA,KAAA,UAAQ8C,KAAK,SAAS1B,UAAU,cAAavB,SAAC,qBAElDC,EAAAA,EAAAA,MAAA,KAAGsB,UAAU,YAAWvB,SAAA,CAAC,gCACOG,EAAAA,EAAAA,KAACqD,EAAAA,GAAI,CAACC,GAAG,UAASzD,SAAC,8B","sources":["components/Meta/index.jsx","pages/LoginPage/index.jsx"],"sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet-async';\n\nconst Meta = ({ title, description, keywords, children }) => {\n  return (\n    <Helmet>\n      <title>{title ? `${title} | Kasa` : 'Kasa - Trouvez le logement de vos rêves'}</title>\n      <meta \n        name=\"description\" \n        content={description || 'Découvrez des milliers de logements uniques pour votre prochain voyage. Kasa vous met en relation avec des hôtes de confiance.'} \n      />\n      {keywords && <meta name=\"keywords\" content={keywords} />}\n      {children}\n    </Helmet>\n  );\n};\n\nexport default Meta;\n","import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport Meta from '../../components/Meta';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNotification } from '../../context/NotificationContext';\n\n\nconst LoginPage = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const { login } = useAuth();\n    const { addNotification } = useNotification();\n    const navigate = useNavigate();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n\n        try {\n                        const response = await fetch(`${process.env.REACT_APP_API_URL}/login`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password }),\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Failed to login');\n            }\n\n            // Simulate receiving permissions from the backend\n            const permissions = data.user.role === 'host' \n                ? ['view_host_dashboard', 'manage_listings', 'view_analytics'] \n                : ['write_review', 'view_bookings'];\n            const userWithPermissions = { ...data.user, permissions };\n\n            login(data.token, userWithPermissions);\n            addNotification(`Bienvenue, ${userWithPermissions.name} !`, 'success');\n            navigate('/');\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    return (\n        <>\n            <Meta \n                title=\"Connexion\"\n                description=\"Connectez-vous à votre compte Kasa pour accéder à vos réservations et gérer votre profil.\"\n            />\n            <main className=\"kasa__wrapper fade-in kasa__main-container auth-page\">\n                <div className=\"auth-container\">\n                    <h1>Connexion</h1>\n                    <form onSubmit={handleSubmit} className=\"auth-form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Adresse e-mail</label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                required\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Mot de passe</label>\n                            <input\n                                type=\"password\"\n                                id=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                required\n                            />\n                        </div>\n                        {error && <p className=\"error-message\">{error}</p>}\n                        <button type=\"submit\" className=\"auth-button\">Se connecter</button>\n                    </form>\n                    <p className=\"auth-link\">\n                        Vous n'avez pas de compte ? <Link to=\"/signup\">Inscrivez-vous</Link>\n                    </p>\n                </div>\n            </main>\n        </>\n    );\n};\n\nexport default LoginPage;\n"],"names":["_ref","title","description","keywords","children","_jsxs","Helmet","_jsx","concat","name","content","LoginPage","email","setEmail","useState","password","setPassword","error","setError","login","useAuth","addNotification","useNotification","navigate","useNavigate","_Fragment","Meta","className","onSubmit","async","event","preventDefault","response","fetch","process","method","headers","body","JSON","stringify","data","json","ok","Error","message","permissions","user","role","userWithPermissions","_objectSpread","token","err","htmlFor","type","id","value","onChange","e","target","required","Link","to"],"sourceRoot":""}