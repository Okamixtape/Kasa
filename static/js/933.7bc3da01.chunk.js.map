{"version":3,"file":"static/js/933.7bc3da01.chunk.js","mappings":"wKAIA,MAoFA,EApFmBA,KACf,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAC7BO,GAAWC,EAAAA,EAAAA,MA2BjB,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAACG,EAAAA,GAAM,CAAAD,SAAA,EACHE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,wBACPE,EAAAA,EAAAA,KAAA,QAAMf,KAAK,cAAcgB,QAAQ,yFAErCD,EAAAA,EAAAA,KAAA,QAAME,UAAU,uDAAsDJ,UAClEF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,iBAAgBJ,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,iBACJF,EAAAA,EAAAA,MAAA,QAAMO,SAlCDC,UACjBC,EAAMC,iBACNb,EAAS,IAET,IACgB,MAAMc,QAAiBC,MAAM,GAADC,OAAIC,wCAA6B,WAAW,CAChFC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAE9B,OAAMG,QAAOE,eAGlC0B,QAAaT,EAASU,OAE5B,IAAKV,EAASW,GACV,MAAM,IAAIC,MAAMH,EAAKI,SAAW,qBAGpC1B,EAAS,SACb,CAAE,MAAO2B,GACL5B,EAAS4B,EAAID,QACjB,GAY0ClB,UAAU,YAAWJ,SAAA,EAC/CF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,aAAYJ,SAAA,EACvBE,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,OAAMxB,SAAC,SACtBE,EAAAA,EAAAA,KAAA,SACIuB,KAAK,OACLC,GAAG,OACHC,MAAOxC,EACPyC,SAAWC,GAAMzC,EAAQyC,EAAEC,OAAOH,OAClCI,UAAQ,QAGhBjC,EAAAA,EAAAA,MAAA,OAAKM,UAAU,aAAYJ,SAAA,EACvBE,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,QAAOxB,SAAC,WACvBE,EAAAA,EAAAA,KAAA,SACIuB,KAAK,QACLC,GAAG,QACHC,MAAOrC,EACPsC,SAAWC,GAAMtC,EAASsC,EAAEC,OAAOH,OACnCI,UAAQ,QAGhBjC,EAAAA,EAAAA,MAAA,OAAKM,UAAU,aAAYJ,SAAA,EACvBE,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,WAAUxB,SAAC,kBAC1BE,EAAAA,EAAAA,KAAA,SACIuB,KAAK,WACLC,GAAG,WACHC,MAAOnC,EACPoC,SAAWC,GAAMpC,EAAYoC,EAAEC,OAAOH,OACtCI,UAAQ,OAGfrC,IAASQ,EAAAA,EAAAA,KAAA,KAAGE,UAAU,gBAAeJ,SAAEN,KACxCQ,EAAAA,EAAAA,KAAA,UAAQuB,KAAK,SAASrB,UAAU,cAAaJ,SAAC,mBAElDF,EAAAA,EAAAA,MAAA,KAAGM,UAAU,YAAWJ,SAAA,CAAC,qCACME,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAG,SAAQjC,SAAC,8B","sources":["pages/SignupPage/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\n\nconst SignupPage = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n\n        try {\n                        const response = await fetch(`${process.env.REACT_APP_API_URL}/signup`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ name, email, password }),\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Failed to sign up');\n            }\n\n            navigate('/login');\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>Inscription - Kasa</title>\n                <meta name=\"description\" content=\"Créez un compte Kasa pour réserver des logements et gérer votre profil.\" />\n            </Helmet>\n            <main className=\"kasa__wrapper fade-in kasa__main-container auth-page\">\n                <div className=\"auth-container\">\n                    <h1>Inscription</h1>\n                    <form onSubmit={handleSubmit} className=\"auth-form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\">Nom</label>\n                            <input\n                                type=\"text\"\n                                id=\"name\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                                required\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                required\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Mot de passe</label>\n                            <input\n                                type=\"password\"\n                                id=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                                required\n                            />\n                        </div>\n                        {error && <p className=\"error-message\">{error}</p>}\n                        <button type=\"submit\" className=\"auth-button\">S'inscrire</button>\n                    </form>\n                    <p className=\"auth-link\">\n                        Vous avez déjà un compte ? <Link to=\"/login\">Connectez-vous</Link>\n                    </p>\n                </div>\n            </main>\n        </>\n    );\n};\n\nexport default SignupPage;\n"],"names":["SignupPage","name","setName","useState","email","setEmail","password","setPassword","error","setError","navigate","useNavigate","_jsxs","_Fragment","children","Helmet","_jsx","content","className","onSubmit","async","event","preventDefault","response","fetch","concat","process","method","headers","body","JSON","stringify","data","json","ok","Error","message","err","htmlFor","type","id","value","onChange","e","target","required","Link","to"],"sourceRoot":""}