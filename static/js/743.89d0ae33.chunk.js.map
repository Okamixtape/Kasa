{"version":3,"file":"static/js/743.89d0ae33.chunk.js","mappings":"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","sources":["components/HostOnboardingForm/AddPropertyForm.jsx","pages/HostOnboardingPage/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst NOMINATIM_API_URL = 'https://nominatim.openstreetmap.org/search';\n\nconst AddPropertyForm = ({ onNext, onBack }) => {\n    const [formData, setFormData] = useState({\n        title: '',\n        address: '',\n        city: '',\n        postalCode: '',\n        description: '',\n        price: '',\n        coordinates: null\n    });\n    const [error, setError] = useState('');\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleGeocodeAndSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n\n        const fullAddress = `${formData.address}, ${formData.city}, ${formData.postalCode}`;\n\n        try {\n            const response = await axios.get(NOMINATIM_API_URL, {\n                params: {\n                    q: fullAddress,\n                    format: 'json',\n                    limit: 1\n                },\n                headers: {\n                    'User-Agent': 'Kasa-App/1.0 (pour un projet éducatif)'\n                }\n            });\n\n            if (response.data && response.data.length > 0) {\n                const { lat, lon } = response.data[0];\n                const finalData = {\n                    ...formData,\n                    coordinates: {\n                        latitude: parseFloat(lat),\n                        longitude: parseFloat(lon),\n                    }\n                };\n                \n                console.log('Submitting data with coordinates:', finalData);\n                onNext(finalData);\n            } else {\n                setError('Impossible de vérifier l\\'adresse. Veuillez vérifier les informations saisies.');\n            }\n        } catch (error) {\n            console.error('Geocoding error:', error);\n            setError('Une erreur est survenue lors de la vérification de l\\'adresse.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleGeocodeAndSubmit} className=\"add-property-form\">\n            <h2>Étape 2: Ajout de votre premier logement</h2>\n            {error && <p className=\"error-message\">{error}</p>}\n            \n            <input name=\"title\" value={formData.title} onChange={handleChange} placeholder=\"Titre de l'annonce\" required />\n            <input name=\"address\" value={formData.address} onChange={handleChange} placeholder=\"Adresse\" required />\n            <input name=\"city\" value={formData.city} onChange={handleChange} placeholder=\"Ville\" required />\n            <input name=\"postalCode\" value={formData.postalCode} onChange={handleChange} placeholder=\"Code Postal\" required />\n            <textarea name=\"description\" value={formData.description} onChange={handleChange} placeholder=\"Description du logement\" required />\n            <input name=\"price\" type=\"number\" value={formData.price} onChange={handleChange} placeholder=\"Prix par nuit (€)\" required />\n\n            <div>\n                <button type=\"button\" onClick={onBack}>Précédent</button>\n                <button type=\"submit\">Suivant</button>\n            </div>\n        </form>\n    );\n};\n\nexport default AddPropertyForm;\n","import React, { useState, useCallback } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport './_host-onboarding-page.scss';\nimport AddPropertyForm from '../../components/HostOnboardingForm/AddPropertyForm';\n\n// Placeholder pour les composants de chaque étape\nconst IdentityVerification = ({ onNext }) => <div><h2>Étape 1: Vérification d'identité</h2><p>Veuillez fournir une pièce d'identité.</p><button onClick={onNext}>Suivant</button></div>;\nconst BankDetails = ({ onNext, onBack }) => <div><h2>Étape 3: Informations bancaires</h2><p>Configurez vos informations pour recevoir les paiements.</p><button onClick={onBack}>Précédent</button><button onClick={onNext}>Suivant</button></div>;\n\nconst HostOnboardingPage = () => {\n    const [step, setStep] = useState(1);\n    const [propertyData, setPropertyData] = useState(null);\n    const { updateUserRole, token } = useAuth(); // Assuming token is available from context\n    const navigate = useNavigate();\n\n    const handleFinalSubmit = useCallback(async () => {\n        if (!propertyData) {\n            console.error(\"Property data is missing.\");\n            // Optionally: show an error to the user\n            return;\n        }\n\n        try {\n            // NOTE: This currently doesn't handle file uploads.\n            // The backend expects multipart/form-data for pictures.\n            // This will need to be enhanced if picture uploads are part of this form.\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/logements`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify(propertyData),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to create listing.');\n            }\n\n            // If submission is successful, update role and navigate\n            await updateUserRole('host');\n            navigate('/host/dashboard');\n\n        } catch (error) {\n            console.error(\"Failed to submit property data:\", error);\n            // Optionally: show an error to the user\n        }\n    }, [propertyData, navigate, updateUserRole, token]);\n\n    const renderStep = () => {\n        switch (step) {\n            case 1:\n                return <IdentityVerification onNext={() => setStep(2)} />;\n            case 2:\n                return <AddPropertyForm onNext={(data) => { setPropertyData(data); setStep(3); }} onBack={() => setStep(1)} />;\n            case 3:\n                return <BankDetails onNext={handleFinalSubmit} onBack={() => setStep(2)} />;\n            default:\n                return <IdentityVerification onNext={() => setStep(2)} />;\n        }\n    };\n\n    return (\n        <main className=\"host-onboarding-page container\">\n            <Helmet>\n                <title>Devenez Hôte - Kasa</title>\n            </Helmet>\n            <div className=\"onboarding-wizard\">\n                {renderStep()}\n            </div>\n        </main>\n    );\n};\n\nexport default HostOnboardingPage;\n"],"names":["_ref","onNext","onBack","formData","setFormData","useState","title","address","city","postalCode","description","price","coordinates","error","setError","handleChange","e","name","value","target","prev","_objectSpread","_jsxs","onSubmit","async","preventDefault","fullAddress","concat","response","axios","get","params","q","format","limit","headers","data","length","lat","lon","finalData","latitude","parseFloat","longitude","console","log","className","children","_jsx","onChange","placeholder","required","type","onClick","IdentityVerification","BankDetails","_ref2","HostOnboardingPage","step","setStep","propertyData","setPropertyData","updateUserRole","token","useAuth","navigate","useNavigate","handleFinalSubmit","useCallback","fetch","process","method","body","JSON","stringify","ok","Error","Helmet","renderStep","AddPropertyForm"],"sourceRoot":""}